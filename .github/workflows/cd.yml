name: CD - Deploy Backend to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image tag or digest to deploy (e.g., master, v1.0.0, sha256:abcd...)'
        required: true
        default: 'master'
      reason:
        description: 'Reason for deployment (optional)'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            set -e

            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
            echo "🚀 Starting backend deployment"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

            cd ~/apetitto-erp

            echo "🔐 Logging into GHCR..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin

            echo "🧩 Updating image in docker-compose.yml..."
            VERSION="${{ github.event.inputs.version }}"

            # Если введён digest (sha256:...), используем @
            if [[ "$VERSION" == sha256:* ]]; then
              sed -i "s|image: ghcr.io/${{ github.repository }}.*|image: ghcr.io/${{ github.repository }}@${VERSION}|" docker-compose.yml
              echo "✅ Using digest: ${VERSION}"
            else
              sed -i "s|image: ghcr.io/${{ github.repository }}:.*|image: ghcr.io/${{ github.repository }}:${VERSION}|" docker-compose.yml
              echo "✅ Using tag: ${VERSION}"
            fi

            echo "🐳 Pulling image..."
            docker-compose pull backend

            echo "🔁 Restarting backend container..."
            docker-compose up -d --no-deps backend

            echo "🧹 Cleaning old Docker images (safe mode)..."
            docker image prune -f --filter "until=24h"

            echo "✅ Deployment finished successfully!"
            echo "Reason: ${{ github.event.inputs.reason }}"
            echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
